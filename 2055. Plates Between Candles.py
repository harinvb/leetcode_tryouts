from bisect import bisect_left, bisect_right
from typing import List


class Solution:
    def platesBetweenCandles(self, s: str, queries: List[List[int]]) -> List[int]:
        candles_at = [i for i, c in enumerate(s) if c == '|']
        res = []
        for a, b in queries:
            if b - a < 2:
                res.append(0)
            else:
                start = bisect_left(candles_at, a)
                end = bisect_right(candles_at, b, start) - 1
                if start >= end:
                    res.append(0)
                else:
                    res.append(candles_at[end] - candles_at[start] - (end - start))
        return res


print(Solution().platesBetweenCandles(
    "**|*******************|**********************************************|************|*********|*****|*********************************************************************************************|***",
    [[31, 96], [14, 192], [0, 180], [13, 193], [12, 192], [11, 183], [12, 189], [65, 116], [55, 160], [100, 164],
     [6, 183], [4, 182], [15, 183], [0, 194], [37, 63], [10, 184], [0, 183], [5, 184], [8, 185], [13, 136], [6, 192],
     [5, 189], [13, 183], [8, 184], [15, 188], [0, 184], [9, 191], [4, 193], [61, 83], [1, 193], [10, 194], [15, 192],
     [13, 184], [2, 185], [11, 190], [11, 195], [14, 188], [12, 188], [94, 116], [3, 184], [0, 189], [4, 185],
     [12, 193], [3, 185], [1, 181], [6, 194], [0, 185], [10, 193], [5, 187], [10, 185], [12, 182], [23, 80], [10, 191],
     [10, 195], [13, 189], [6, 193], [5, 183], [2, 182], [14, 181], [3, 187], [9, 187], [4, 180], [5, 190], [4, 181],
     [7, 184], [3, 135], [6, 189], [14, 186], [5, 195], [11, 186], [8, 186], [30, 159], [11, 192], [61, 80], [3, 181],
     [5, 192], [10, 187], [2, 25], [9, 194], [43, 118], [2, 189], [8, 180], [15, 193], [13, 181], [14, 182], [105, 133],
     [8, 195], [0, 193], [13, 192], [3, 186], [1, 189], [24, 124], [0, 181], [136, 158], [11, 193], [14, 180],
     [11, 180], [54, 149], [8, 191], [11, 188], [4, 188], [2, 181], [5, 188], [11, 181], [43, 175], [12, 183], [0, 186],
     [6, 188], [0, 191], [15, 186], [8, 187], [7, 74], [3, 180], [27, 149], [73, 153], [52, 145], [9, 188], [7, 195],
     [14, 193], [77, 160], [0, 187], [10, 188], [4, 187], [62, 160], [13, 190], [12, 190], [5, 191], [14, 184],
     [9, 186], [7, 189], [131, 148], [9, 189], [159, 179], [20, 174], [13, 180], [4, 184], [0, 192], [2, 190], [0, 195],
     [10, 180], [9, 182], [9, 181], [11, 194], [12, 194], [5, 185], [3, 189], [118, 160], [5, 181], [14, 122], [25, 63],
     [11, 189], [3, 193], [31, 176], [58, 148], [9, 183], [11, 184], [35, 181], [12, 186], [14, 190], [8, 190],
     [15, 194], [1, 195], [4, 194], [2, 180], [9, 190], [3, 182], [15, 181], [13, 194], [6, 182], [42, 117], [4, 186],
     [13, 187], [25, 103], [6, 184], [5, 180], [21, 180], [1, 187], [15, 189], [6, 180], [44, 160], [8, 182], [15, 180],
     [10, 182], [1, 180], [7, 185], [8, 193]]))
